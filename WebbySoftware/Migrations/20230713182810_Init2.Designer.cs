// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebbySoftware.DBOperations;

#nullable disable

namespace WebbySoftware.Migrations
{
    [DbContext(typeof(WebbySoftDbContext))]
    [Migration("20230713182810_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebbySoftware.Entity.DesktopDev.DesktopDev", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("DeskTags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectGitLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Thumbnails")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("DesktopApps");
                });

            modelBuilder.Entity("WebbySoftware.Entity.DesktopDev.UserDeskDev", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("DeskID")
                        .HasColumnType("integer");

                    b.HasKey("UserID", "DeskID");

                    b.HasIndex("DeskID");

                    b.ToTable("DeskDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.GameDev.GameDev", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("GameTags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectGitLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Thumbnails")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WebbySoftware.Entity.GameDev.UserGameDev", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("GameID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("GameDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.MobileDev.MobileDev", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("MobileAppTags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectGitLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Thumbnails")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("MobileApps");
                });

            modelBuilder.Entity("WebbySoftware.Entity.MobileDev.UserMobileDev", b =>
                {
                    b.Property<int>("MobileAppID")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("MobileAppID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("MobileDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.User.UserDev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GithubLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LinkedINLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpireDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebbySoftware.Entity.WebDev.UserWebDev", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("WebAppID")
                        .HasColumnType("integer");

                    b.HasKey("UserID", "WebAppID");

                    b.HasIndex("WebAppID");

                    b.ToTable("WebDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.WebDev.WebDev", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectGitLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectWebpage")
                        .HasColumnType("text");

                    b.Property<List<string>>("Thumbnails")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<string>>("WebTags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("ID");

                    b.ToTable("WebApps");
                });

            modelBuilder.Entity("WebbySoftware.Entity.DesktopDev.UserDeskDev", b =>
                {
                    b.HasOne("WebbySoftware.Entity.DesktopDev.DesktopDev", "DeskDevs")
                        .WithMany("DeskDevs")
                        .HasForeignKey("DeskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebbySoftware.Entity.User.UserDev", "Users")
                        .WithMany("DeskDevs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeskDevs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebbySoftware.Entity.GameDev.UserGameDev", b =>
                {
                    b.HasOne("WebbySoftware.Entity.GameDev.GameDev", "GameDevs")
                        .WithMany("GameDevs")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebbySoftware.Entity.User.UserDev", "Users")
                        .WithMany("GameDevs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameDevs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebbySoftware.Entity.MobileDev.UserMobileDev", b =>
                {
                    b.HasOne("WebbySoftware.Entity.MobileDev.MobileDev", "MobileDevs")
                        .WithMany("MobileDevs")
                        .HasForeignKey("MobileAppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebbySoftware.Entity.User.UserDev", "Users")
                        .WithMany("MobileDevs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MobileDevs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebbySoftware.Entity.WebDev.UserWebDev", b =>
                {
                    b.HasOne("WebbySoftware.Entity.User.UserDev", "Users")
                        .WithMany("WebDevs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebbySoftware.Entity.WebDev.WebDev", "WebDevs")
                        .WithMany("WebDevs")
                        .HasForeignKey("WebAppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("WebDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.DesktopDev.DesktopDev", b =>
                {
                    b.Navigation("DeskDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.GameDev.GameDev", b =>
                {
                    b.Navigation("GameDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.MobileDev.MobileDev", b =>
                {
                    b.Navigation("MobileDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.User.UserDev", b =>
                {
                    b.Navigation("DeskDevs");

                    b.Navigation("GameDevs");

                    b.Navigation("MobileDevs");

                    b.Navigation("WebDevs");
                });

            modelBuilder.Entity("WebbySoftware.Entity.WebDev.WebDev", b =>
                {
                    b.Navigation("WebDevs");
                });
#pragma warning restore 612, 618
        }
    }
}
